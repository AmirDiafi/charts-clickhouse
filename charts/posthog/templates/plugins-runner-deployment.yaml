{{- if .Values.pluginsServerRunner.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "posthog.fullname" . }}-plugins-server-runner
  labels: {{- include "_snippet-metadata-labels-common" . | nindent 4 }}
  annotations: {{- include "_snippet-metadata-annotations-common" . | nindent 4 }}
spec:
  selector:
    matchLabels:
        app: {{ template "posthog.fullname" . }}
        release: "{{ .Release.Name }}"
        role: plugins-server-runner
  {{- if not .Values.pluginsServerRunner.hpa.enabled }}
  replicas: {{ .Values.pluginsServerRunner.replicacount }}
  {{- end }}
  template:
    metadata:
      annotations:
        checksum/secrets.yaml: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
      {{- if .Values.pluginsServerRunner.podAnnotations }}
{{ toYaml .Values.pluginsServerRunner.podAnnotations | indent 8 }}
      {{- end }}
      labels:
        app: {{ template "posthog.fullname" . }}
        release: "{{ .Release.Name }}"
        role: plugins-server-runner
        {{- if (eq (default .Values.image.tag "none") "latest") }}
        date: "{{ now | unixEpoch }}"
        {{- end }}
        {{- if .Values.pluginsServerRunner.podLabels }}
{{ toYaml .Values.pluginsServerRunner.podLabels | indent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "posthog.serviceAccountName" . }}
      {{- if .Values.pluginsServerRunner.affinity }}
      affinity:
{{ toYaml .Values.pluginsServerRunner.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.pluginsServerRunner.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.pluginsServerRunner.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.pluginsServerRunner.tolerations }}
      tolerations:
{{ toYaml .Values.pluginsServerRunner.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.pluginsServerRunner.schedulerName }}
      schedulerName: "{{ .Values.pluginsServerRunner.schedulerName }}"
      {{- end }}
      {{- if .Values.pluginsServerRunner.priorityClassName }}
      priorityClassName: "{{ .Values.pluginsServerRunner.priorityClassName }}"
      {{- end }}
      {{- if .Values.image.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.image.imagePullSecrets | indent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}-plugins-server-runner
        image: {{ template "posthog.image.fullPath" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
          - /bin/sh
          - -c
          - |
            ./bin/plugin-server-runner --no-restart-loop
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        env:
        # Kafka env variables
        {{- include "snippet.kafka-env" . | indent 8 }}

        # Redis env variables
        {{- include "snippet.redis-env" . | indent 8 }}

        # statsd env variables
        {{- include "snippet.statsd-env" . | indent 8 }}

        - name: SENTRY_DSN
          value: {{ .Values.sentryDSN | quote }}
        - name: DEPLOYMENT
          value: {{ template "posthog.deploymentEnv" . }}
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "posthog.fullname" . }}
              key: posthog-secret
        {{- include "snippet.postgresql-env" . | nindent 8 }}
        {{- include "snippet.clickhouse-env" . | nindent 8 }}
        - name: CAPTURE_INTERNAL_METRICS
          value: {{ .Values.web.internalMetrics.capture| quote }}
        - name: HELM_INSTALL_INFO
          value: {{ template "posthog.helmInstallInfo" . }}
{{- if .Values.env }}
{{ toYaml .Values.env | indent 8 }}
{{- end }}
{{- if .Values.pluginsServerRunner.env }}
{{ toYaml .Values.pluginsServerRunner.env | indent 8 }}
{{- end }}
        resources:
{{ toYaml .Values.pluginsServerRunner.resources | indent 12 }}
      initContainers:
      {{- include "_snippet-initContainers-wait-for-service-dependencies" . | indent 8 }}
      {{- include "_snippet-initContainers-wait-for-migrations" . | indent 8 }}
{{- end }}
